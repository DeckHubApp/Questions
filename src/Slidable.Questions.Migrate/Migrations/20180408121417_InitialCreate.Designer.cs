// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Slidable.Questions.Data;

namespace Slidable.Questions.Migrate.Migrations
{
    [DbContext(typeof(QuestionContext))]
    [Migration("20180408121417_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-preview1-28290");

            modelBuilder.Entity("Slidable.Questions.Data.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("QuestionId");

                    b.Property<string>("QuestionUuid")
                        .HasMaxLength(40);

                    b.Property<string>("Text");

                    b.Property<DateTimeOffset>("Time");

                    b.Property<string>("User")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionUuid");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Slidable.Questions.Data.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("From")
                        .HasMaxLength(16);

                    b.Property<string>("Show")
                        .HasMaxLength(256);

                    b.Property<int>("Slide");

                    b.Property<string>("Text");

                    b.Property<DateTimeOffset>("Time");

                    b.Property<string>("Uuid")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.HasIndex("Show");

                    b.HasIndex("Uuid")
                        .IsUnique();

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Slidable.Questions.Data.Answer", b =>
                {
                    b.HasOne("Slidable.Questions.Data.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
